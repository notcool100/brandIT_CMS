trigger:
  branches:
    include:
      - main
  paths:
    include:
      - frontend/*

pool:
  name: 'Astro'

variables:
  nodeVersion: '24.x'

stages:
- stage: BuildFrontend 
  displayName: 'Build Frontend'
  jobs:
  - job: BuildFrontendJob
    displayName: 'Build svelte.js App'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '$(nodeVersion)'
      displayName: 'Install Node.js'
    
    - script: |
        cd frontend
        npm install --legacy-peer-deps
      displayName: 'Install Frontend Dependencies'
    
    - script: |
        cd frontend
        echo "Running TypeScript check with skipLibCheck flag"
        npm run type-check || true
      displayName: 'Run TypeScript Check (Non-blocking)'
    
    - script: |
        cd frontend
        echo "Building frontend application with TypeScript errors ignored"
        NODE_OPTIONS=--max_old_space_size=4096 npm run build
      displayName: 'Build Frontend Application'
    
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: 'frontend'
        includeRootFolder: false
        archiveType: 'tar'
        tarCompression: 'gz'
        archiveFile: '$(Build.ArtifactStagingDirectory)/cms_frontend.tar.gz'
        replaceExistingArchive: true
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/cms_frontend.tar.gz'
        ArtifactName: 'frontend'
        publishLocation: 'Container'

- stage: DeployDev
  displayName: 'Deploy to Development'
  dependsOn: 
    - BuildFrontend
  jobs:
  - job: DeployFrontendDev
    displayName: 'Deploy Frontend to Dev'
    steps:
    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'frontend'
        downloadPath: '$(System.ArtifactsDirectory)'

    - script: |
         echo "Listing downloaded files:"
         ls -la $(System.ArtifactsDirectory)
         
         # Create a clean temporary directory for extraction
         TEMP_DIR=$(mktemp -d)
         echo "Created temporary directory: $TEMP_DIR"
         
         # Extract to temporary directory first
         tar -xzf $(System.ArtifactsDirectory)/cms_frontend.tar.gz -C $TEMP_DIR
         
         # Ensure target directory exists with proper permissions
         mkdir -p /var/www/cms/frontend-dev
         
         # Remove existing .next directory if it exists to avoid permission issues
         if [ -d "/var/www/cms/frontend-dev/.next" ]; then
           rm -rf /var/www/cms/frontend-dev/.next
         fi
         
         # Copy files from temp directory to target directory
         rsync -av --exclude='.next/cache' $TEMP_DIR/ /var/www/cms/frontend-dev/
         
         # Clean up temporary directory
         rm -rf $TEMP_DIR
         
         echo "Frontend deployed to /var/www/cms/frontend-dev"
      displayName: 'Extract Frontend Build'

    - script: |
        # Check if we're running as the azureagent user
        if [ "$(whoami)" = "azureagent" ]; then
          # Running as azureagent, no need for sudo
          export PATH=$PATH:/home/azureagent/.nvm/versions/node/v24.4.1/bin
          export PM2_HOME=/home/azureagent/.pm2
          cd /var/www/cms/frontend-dev
          pm2 restart cms-frontend-dev || pm2 start npm --name "cms-frontend-dev" --cwd /var/www/cms/frontend-dev -- start
          pm2 save
        else
          # We need to use a different approach since sudo is not available
          echo "Current user is not azureagent and sudo is not available. Please configure the pipeline to run as the azureagent user."
          echo "Alternatively, add the pipeline user to the sudoers file with the appropriate permissions."
          exit 1
        fi
      displayName: 'Restart Frontend with PM2'
